{"mappings":"AAAAA,OAAOC,IAAAA,CACLC,OAAAA,SAAOC,SACCC,EAAWC,SAASC,cAAc,mBACxCF,EAASG,UAAYJ,EAAKK,OACnBJ,EAASK,QAAQC,YAE1BC,MAAAA,SAAMR,EAAMS,GACVT,EAAKU,WAAWC,aAAaF,EAAOT,EAAKY,cAE3CC,OAAAA,SAAOb,EAAMS,GACXT,EAAKU,WAAWC,aAAaF,EAAOT,IAEtCc,OAAAA,SAAOC,EAAQf,GACbe,EAAOC,YAAYhB,IAErBiB,KAAAA,SAAKjB,EAAMe,GACTjB,IAAIe,OAAOb,EAAMe,GACjBjB,IAAIgB,OAAOC,EAAQf,IAErBkB,OAAAA,SAAOlB,UACLA,EAAKU,WAAWS,YAAYnB,GACrBA,GAEToB,MAAAA,SAAMpB,OACAqB,EAAAA,GACAC,EAAItB,EAAKO,gBACNe,GACLD,EAAME,KAAKzB,IAAIoB,OAAOlB,EAAKO,aAC3Be,EAAItB,EAAKO,kBAEJc,GAETG,KAAAA,SAAKxB,EAAMyB,EAAMC,MACU,IAArBC,UAAUC,OACZ5B,EAAK6B,aAAaJ,EAAMC,WACM,IAArBC,UAAUC,cACZ5B,EAAK8B,aAAaL,IAG7BM,KAAAA,SAAK/B,EAAMgC,MACgB,IAArBL,UAAUC,OACR,cAAe5B,GACjBiC,QAAQC,IAAI,cAAelC,GAC3BA,EAAKmC,UAAYH,GAEjBhC,EAAKoC,YAAcJ,UAES,IAArBL,UAAUC,aACf,cAAe5B,EACVA,EAAKmC,UAELnC,EAAKoC,aAIlBC,KAAAA,SAAKrC,EAAMgC,MACgB,IAArBL,UAAUC,OACZ5B,EAAKI,UAAY4B,UAEa,IAArBL,UAAUC,cACZ5B,EAAKI,WAGhBkC,MAAAA,SAAMtC,EAAMuC,WACDC,KAAOD,EACdvC,EAAKsC,MAAME,GAAOD,EAAOC","sources":["./src/dom.js"],"sourcesContent":["window.dom = {\r\n  create(node) {\r\n    const continer = document.createElement(\"template\")\r\n    continer.innerHTML = node.trim()\r\n    return continer.content.firstChild\r\n  },\r\n  after(node, node2) { // 加弟弟元素\r\n    node.parentNode.insertBefore(node2, node.nextSibling)\r\n  },\r\n  before(node, node2) { // 加哥哥元素\r\n    node.parentNode.insertBefore(node2, node)\r\n  },\r\n  append(parent, node) { // 加儿子元素\r\n    parent.appendChild(node)\r\n  },\r\n  wrap(node, parent) { // 给元素加个爹\r\n    dom.before(node, parent)\r\n    dom.append(parent, node)\r\n  },\r\n  remove(node) { // 删除节点\r\n    node.parentNode.removeChild(node)\r\n    return node\r\n  },\r\n  empty(node) { // 删除节点的所有儿子，节点本身保留\r\n    let array = []\r\n    let x = node.firstChild\r\n    while (x) {\r\n      array.push(dom.remove(node.firstChild))\r\n      x = node.firstChild\r\n    }\r\n    return array\r\n  },\r\n  attr(node, name, value) { // 重载\r\n    if (arguments.length === 3) { // 传三个参数时修改元素属性值\r\n      node.setAttribute(name, value)\r\n    } else if (arguments.length === 2) { // 传两个参数时获取属性值\r\n      return node.getAttribute(name)\r\n    }\r\n  },\r\n  text(node, string) { // 更改文本内容\r\n    if (arguments.length === 2) {\r\n      if ('innerText' in node) { // 适配IE和其它浏览器\r\n        console.log('innerText' in node);\r\n        node.innerText = string // IE\r\n      } else {\r\n        node.textContent = string // Firefox / Chore\r\n      }\r\n    } else if (arguments.length === 1) { // 只传一个参数的话表示想要获取元素文本内容\r\n      if ('innerText' in node) {\r\n        return node.innerText\r\n      } else {\r\n        return node.textContent\r\n      }\r\n    }\r\n  },\r\n  html(node, string) { // 读写元素\r\n    if (arguments.length === 2) {\r\n      node.innerHTML = string\r\n\r\n    } else if (arguments.length === 1) {\r\n      return node.innerHTML\r\n    }\r\n  },\r\n  style(node, object) {\r\n    for (let key in object) {\r\n      node.style[key] = object[key]\r\n    }\r\n  }\r\n}"],"names":["window","dom","create","node","continer","document","createElement","innerHTML","trim","content","firstChild","after","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","string","console","log","innerText","textContent","html","style","object","key"],"version":3,"file":"index.6c5dfdde.js.map"}